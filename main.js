(()=>{"use strict";var e={689:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,"* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n}\n\n.square {\n  border: 0.05rem solid black;\n  background-color: white;\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,0BAA0B;AAC5B;;AAEA;EACE,2BAA2B;EAC3B,uBAAuB;AACzB",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n}\n\n.square {\n  border: 0.05rem solid black;\n  background-color: white;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],u=r.base?s[0]+r.base:s[0],l=a[u]||0,d="".concat(u," ").concat(l);a[u]=l+1;var p=n(d),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var m=o(f,r);r.byIndex=c,t.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=r(e,o),u=0;u<a.length;u++){var l=n(a[u]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0,(()=>{var e={};n.r(e),n.d(e,{gameboardLength:()=>S});const t=document.querySelectorAll("main > section"),r=document.querySelector("section.mode-selection"),o=document.querySelectorAll(".mode-selection button"),a=document.querySelector("section.player-set-up"),i=document.querySelector("section.player-set-up form"),c=document.querySelector("section.game"),s=document.querySelector(".game .message"),u=document.querySelectorAll(".game .game-area"),l=document.querySelectorAll(".game .gameboard");function d(e){return e[0].toUpperCase()+e.slice(1)}function p(e,t){return t.some((t=>t.every(((t,n)=>t===e[n]))))}function f(e){return{length:e}}function m(e,t){let n=t;return{hit:function(){n+=1},isSunk:function(){return e===n}}}function h(e,t,n=1/0){function r(){const e=[];if(void 0===this.position||void 0===this.orientation)return e;const n=this.orientation;for(let r=0;r<this[t].length;r+=1){const t=[...this.position];t[n]+=r,e.push(t)}return e}function o(r,o){const a=e[r],i=function(e,r){const o=[n-r[t].length,n-1],a=0===r.orientation?o:[...o].reverse();return e.map(((e,t)=>Math.max(0,Math.min(a[t],e))))}(o,a);if(p(i,e.reduce(((e,t)=>{if(!t.position)return e;const n=t.area();return[...e,...n,...(r=n,r.reduce(((e,[t,n])=>[...e,...[[1,0],[-1,0],[0,1],[0,-1],[1,1],[1,-1],[-1,1],[-1,1]].map((([e,r])=>[t+e,n+r])).filter((e=>!p(e,r)))]),[]))];var r}),[])))throw new Error("This position is illegal!");a.position=i}function a(t){const n=e[t];n.orientation=1-n.orientation}e.forEach((e=>Object.assign(e,{orientation:0,area:r})));const i=d(t);return{[`place${i}`]:o,[`all${i}sPlaced`]:function(){return e.every((e=>e.position))},[`rotate${i}`]:a,[`autoPlace${i}s`]:function(){e.forEach(((e,t)=>{for(Math.floor(2*Math.random())&&a(t);!e.position;)try{o(t,[...new Array(2)].map((()=>Math.floor(Math.random()*n))))}catch{}}))}}}function y(e,t,n,{moveable:r=!1,allMethodNames:o=[]}={}){const a=e.map((e=>({[t]:n(e)}))),i=o.reduce(((e,n)=>{const r=d(n);return{...e,[`all${r}`]:function(){return a.every((e=>e[t][`is${r}`]()))}}}),{});return{[`${t}s`]:a,...i,...r?h(a,t,r.areaLength||1/0):{}}}function v(e){return{name:e,setName:function(e){this.name=e}}}function g(e,{attackItemName:t}={}){return{attacks:e,receiveAttack:function(n){e.push(n),t&&function(e,n){e.forEach((e=>{p(n,e.area())&&e[t].hit()}))}(this[`${t}s`],n)}}}function b(){function e(e){return[...new Array(2)].map((()=>Math.floor(Math.random()*e.length)))}return{autoAttack:function(t){let n=e(t);for(;p(n,t.attacks||[]);)n=e(t);this.attack(t,n)}}}function A({auto:e=!1}={}){return{attack:function(e,t){if(p(t,e.attacks||[]))throw new Error("That position has already been attacked!");e.receiveAttack(t)},...e?b():{}}}function E({method:e=""}={}){return{takeTurn:function(t){return!!e&&(this[e](t),!0)}}}function M({length:e=2,hits:t=0}={}){return{type:"Ship",...f(e),...m(e,t)}}function x(e="Player"){return{type:"humanPlayer",...v(e),...A(),...E()}}const k={modes:{playerMode:0},players:[],gameboards:[],currPlayerIndex:0,gameOver:!1};function w({playerMode:e=0,gameboardLength:t=10}={}){!function(e){const t={...e};Object.keys(t).forEach((e=>{t[e]=Number(t[e])})),k.modes=t}({playerMode:e}),function(){if(k.modes.playerMode)k.players=[...new Array(2)].map((()=>x()));else{k.players=[];const e=Math.floor(2*Math.random());k.players[e]=x(),k.players[1-e]={type:"computerPlayer",...v("Computer"),...A({auto:!0}),...E({method:"autoAttack"})}}}(),function(e){if(k.gameboards=[...new Array(2)].map((()=>function({shipLengths:e=[5,4,3,3,2],length:t=10,attacks:n=[]}={}){return{type:"Gameboard",...f(t),...y(e.map((e=>f(e))),"ship",M,{moveable:{areaLength:t},allMethodNames:["sunk"]}),...g(n,{attackItemName:"ship"})}}({length:e}))),k.modes.playerMode)return;const t=k.players.findIndex((e=>"computerPlayer"===e.type));k.gameboards[t].autoPlaceShips()}(t),k.currPlayerIndex=0,k.gameOver=!1}const S=10;function C(){t.forEach((e=>e.classList.add("hidden")))}function L(e,t){return`<div class="field">\n    <label for="player-${e}-name">Player${t?` ${e+1}`:""} Name</label>\n    <input type="text" name="player-${e}-name" id="player-${e}-name">\n  </div>`}function B(e){w({playerMode:Number(e.target.closest("button").dataset.mode),gameboardLength:S}),function(e){C(),a.classList.remove("hidden");for(let t=e;t>=0;t-=1)i.insertAdjacentHTML("afterBegin",L(t,e))}(k.modes.playerMode)}window.addEventListener("load",(function(){C(),r.classList.remove("hidden")})),o.forEach((e=>e.addEventListener("click",B))),i.addEventListener("submit",(function(t){t.preventDefault();const n=[...t.target.querySelectorAll("input")].map((e=>e.value));let r=0;k.players.forEach((e=>{"humanPlayer"===e.type&&(e.setName(n[r]),r+=1)})),C(),c.classList.remove("hidden"),l.forEach((t=>{const{gameboardLength:n}=e,r=Math.min(window.innerHeight,window.innerWidth)/(2.25*n);t.style.display="grid",t.style.gridTemplate=`repeat(${n}, ${r}px) / repeat(${n}, ${r}px)`;for(let e=0;e<n**2;e+=1)t.insertAdjacentHTML("beforeend",'<div class="square"></div>')})),function(){const e=k.gameboards.findIndex((e=>!e.allShipsPlaced()));var t,n;n=e,u.forEach((e=>e.classList.add("hidden"))),u[n].classList.remove("hidden"),t=k.players[e].name,s.textContent=`${t}, place your ships.`}()}));var P=n(379),$=n.n(P),T=n(795),q=n.n(T),N=n(569),j=n.n(N),I=n(565),O=n.n(I),R=n(216),U=n.n(R),H=n(589),Z=n.n(H),_=n(689),z={};z.styleTagTransform=Z(),z.setAttributes=O(),z.insert=j().bind(null,"head"),z.domAPI=q(),z.insertStyleElement=U(),$()(_.Z,z),_.Z&&_.Z.locals&&_.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,