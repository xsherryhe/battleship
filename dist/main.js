(()=>{"use strict";var n={735:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const s=i},689:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"html {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  padding: 1rem;\n  font-size: 2rem;\n  text-align: center;\n}\n\nmain {\n  padding: 0.5rem;\n  flex: 1 1 0;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\ninput {\n  min-width: 18rem;\n  padding: 0.25rem;\n}\n\np {\n  margin: 0;\n}\n\nbutton, *[draggable='true'] {\n  cursor: pointer;\n}\n\nbutton:not(.rotate):not(.square) {\n  padding: 0.5rem 1.5rem;\n}\n\n*[draggable='true'].dragged {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n}\n\n.hidden {\n  display: none !important;\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;AAC1B",sourcesContent:["html {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\nheader {\n  padding: 1rem;\n  font-size: 2rem;\n  text-align: center;\n}\n\nmain {\n  padding: 0.5rem;\n  flex: 1 1 0;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\ninput {\n  min-width: 18rem;\n  padding: 0.25rem;\n}\n\np {\n  margin: 0;\n}\n\nbutton, *[draggable='true'] {\n  cursor: pointer;\n}\n\nbutton:not(.rotate):not(.square) {\n  padding: 0.5rem 1.5rem;\n}\n\n*[draggable='true'].dragged {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n}\n\n.hidden {\n  display: none !important;\n}\n"],sourceRoot:""}]);const s=i},535:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'.game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.game .message {\n  font-size: 1.5rem;\n  text-align: center;\n}\n\n.game button:not(.rotate):not(.square) {\n  margin-top: 1rem;\n}\n\n.game-areas {\n  display: flex;\n  justify-content: center;\n  gap: 10vw;\n}\n\n.game-area {\n  position: relative;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: red;\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: rgba(0, 128, 0, 0.5);\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.ships {\n  width: 100%;\n  position: absolute;\n  padding: 0.5rem;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.invisible .ship-square {\n  background-image: none;\n  background-color: transparent;\n}\n\n.ship button.rotate {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  grid-row: 1;\n  grid-column: 3 / span 2;\n  justify-self: center;\n}\n\n.ship button.rotate img {\n  width: 100%;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.invisible button.rotate {\n  visibility: hidden;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: gray;\n}\n\n.disabled .ship-square.full {\n  background-color: gray;\n}\n\n.disabled .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, gray 50%, transparent 50%);\n}\n\n.disabled .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, gray 50%, transparent 50%);\n}\n',"",{version:3,sources:["webpack://./src/styles/game.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,0BAA0B;EAC1B,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;EAC3B,kBAAkB;EAClB,6BAA6B;EAC7B,UAAU;EACV,aAAa;AACf;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,6CAA6C;EAC7C,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,UAAU;EACV,6BAA6B;EAC7B,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,oBAAoB;AACtB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6EAA6E;AAC/E;;AAEA;EACE,4EAA4E;AAC9E;;AAEA;EACE,4EAA4E;AAC9E;;AAEA;EACE,6EAA6E;AAC/E",sourcesContent:['.game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.game .message {\n  font-size: 1.5rem;\n  text-align: center;\n}\n\n.game button:not(.rotate):not(.square) {\n  margin-top: 1rem;\n}\n\n.game-areas {\n  display: flex;\n  justify-content: center;\n  gap: 10vw;\n}\n\n.game-area {\n  position: relative;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: red;\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: rgba(0, 128, 0, 0.5);\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.ships {\n  width: 100%;\n  position: absolute;\n  padding: 0.5rem;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.invisible .ship-square {\n  background-image: none;\n  background-color: transparent;\n}\n\n.ship button.rotate {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  grid-row: 1;\n  grid-column: 3 / span 2;\n  justify-self: center;\n}\n\n.ship button.rotate img {\n  width: 100%;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.invisible button.rotate {\n  visibility: hidden;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: gray;\n}\n\n.disabled .ship-square.full {\n  background-color: gray;\n}\n\n.disabled .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, gray 50%, transparent 50%);\n}\n\n.disabled .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, gray 50%, transparent 50%);\n}\n'],sourceRoot:""}]);const s=i},826:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".mode-selection {\n  margin-top: 10vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.mode-selection.mode-selection button {\n  padding: 1rem 2rem;\n}\n","",{version:3,sources:["webpack://./src/styles/mode-selection.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:[".mode-selection {\n  margin-top: 10vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.mode-selection.mode-selection button {\n  padding: 1rem 2rem;\n}\n"],sourceRoot:""}]);const s=i},20:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,".player-set-up {\n  display: flex;\n  justify-content: center;\n}\n\n.player-set-up form {\n  align-items: center;\n}\n","",{version:3,sources:["webpack://./src/styles/player-set-up.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB",sourcesContent:[".player-set-up {\n  display: flex;\n  justify-content: center;\n}\n\n.player-set-up form {\n  align-items: center;\n}\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var u=t(l),E={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(E);else{var m=o(E,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=document.querySelectorAll("main > section"),e=document.querySelector("section.mode-selection"),r=document.querySelectorAll(".mode-selection button"),o=document.querySelector("section.player-set-up"),a=document.querySelector("section.player-set-up form"),i=document.querySelector("section.game"),s=document.querySelector(".game .message"),A=document.querySelectorAll(".game .game-area"),c=document.querySelectorAll(".game .gameboard-label"),d=document.querySelectorAll(".game .gameboard"),l=()=>document.querySelectorAll(".game .gameboard .square"),u=document.querySelectorAll(".game div.remaining-ships"),E=document.querySelectorAll(".game span.remaining-ships-counter"),m=document.querySelectorAll(".game .ships"),p=()=>document.querySelectorAll(".game .ship"),h=()=>document.querySelectorAll(".ship button.rotate"),g=document.querySelector("button.update-gameboard-set-up"),f=document.querySelector("button.start-game"),b=document.querySelector("button.reset-game"),C=document.querySelector("section.pass-device"),y=document.querySelector(".pass-device span.pass-device-player"),B=document.querySelector(".pass-device button.pass-device-continue");function v(){n.forEach((n=>n.classList.add("hidden")))}function x(n,e){return`<div class="field">\n    <label for="player-${n}-name">Player${e?` ${n+1}`:""} Name</label>\n    <input type="text" name="player-${n}-name" id="player-${n}-name">\n  </div>`}function k(){v(),i.classList.remove("hidden")}function w(n){s.textContent=n}function S(n,e=!1){A.forEach(((t,r)=>{const o=t.querySelectorAll(".ship");r!==n?(t.classList.add("disabled"),o.forEach((n=>{e?n.classList.add("hidden"):n.classList.remove("hidden")}))):(t.classList.remove("disabled"),o.forEach((n=>{e?n.classList.remove("hidden"):n.classList.add("hidden")})))}))}function M(n,e){n.classList.contains("attacked")||(n.classList.add(e?"hit":"miss","attacked"),n.insertAdjacentHTML("beforeend",`<p class="marker">${e?"X":"O"}</p>`))}function q(n,e){v(),C.classList.remove("hidden"),y.textContent=`${n||"the next player"}${void 0!==e?` (Player ${e+1})`:""}`}const z=[5,4,3,3,2],L=t.p+"b5a4d1ed463b4b0969ff.svg";function I(n){n.dataset.orientation=1-Number(n.dataset.orientation),n.style.gridTemplate=n.style.gridTemplate.split(" / ").reverse().join(" / ")}function F([n,e],t,r,o,a){const i=[[-1,0],[r,0]];for(let n=-1;n<=r;n+=1)i.push([n,-1],[n,1]);i.map((r=>{const[o,a]=t?r.reverse():r;return[n+o,e+a]})).filter((n=>n.every((n=>n>=0&&n<10)))).forEach((([n,e])=>{const t=10*n+e;d[o].querySelector(`.square[data-index="${t}"]`).classList.add((a?"legal":"error")+"-border")}))}function $(){l().forEach((n=>{n.classList.remove("legal-border","error-border")}))}function P(n){c.forEach(((e,t)=>{e.textContent=`${n[t]}’s Shipyard`})),u.forEach((n=>n.classList.add("hidden")));const e=Math.min(window.innerHeight,window.innerWidth)/22.5;!function(n,e){d.forEach((e=>{e.style.display="grid",e.style.gridTemplate=`repeat(10, ${n}px) / repeat(10, ${n}px)`,e.textContent="";for(let n=0;n<100;n+=1)e.insertAdjacentHTML("beforeend",`<button class="square" data-index="${n}"></button>`)}))}(e),function(n){m.forEach(((e,t)=>{e.textContent="",z.forEach(((r,o)=>{e.insertAdjacentHTML("beforeend",function(n,e,t,r){let o=`<div style="display: grid; grid-template: repeat(${e}, ${n}px) / repeat(4, ${n/2}px);" class="ship" data-game-area-index="${r}" data-index="${t}" data-square-length="${n}" data-orientation="0" draggable="true">`;for(let n=0;n<e;n+=1)0===n?(o+='<div class="ship-square top-left"></div>',o+='<div class="ship-square top-right"></div>'):n===e-1?(o+='<div class="ship-square bottom-left"></div>',o+='<div class="ship-square bottom-right"></div>'):o+='<div class="ship-square full"></div>';return o+=`<button class="rotate"><img src=${L} alt="rotate"></button></div>`,o}(n,r,o,t))}))}))}(e)}function T(n){return n[0].toUpperCase()+n.slice(1)}function R(n,e){return e.some((e=>e.every(((e,t)=>e===n[t]))))}function j(n){return{length:n}}function Z(n,e){let t=e;return{hit:function(){t+=1},isSunk:function(){return n===t}}}function N(n,e,t=1/0){function r(n=this.position){const t=[];if(void 0===n||void 0===this.orientation)return t;const r=this.orientation;for(let o=0;o<this[e].length;o+=1){const e=[...n];e[r]+=o,t.push(e)}return t}function o(e,t){return n[e].area(t).every((t=>!R(t,function({excluding:e}={}){return n.reduce(((n,t,r)=>{if(!t.position||e.includes(r))return n;const o=t.area();return[...n,...o,...(a=o,a.reduce(((n,[e,t])=>[...n,...[[1,0],[-1,0],[0,1],[0,-1],[1,1],[1,-1],[-1,1],[-1,-1]].map((([n,r])=>[e+n,t+r])).filter((n=>!R(n,a)))]),[]))];var a}),[])}({excluding:[e]}))))}function a(r,a){const i=n[r],s=function(n,r){const o=[t-r[e].length,t-1],a=0===r.orientation?o:[...o].reverse();return n.map(((n,e)=>Math.max(0,Math.min(a[e],n))))}(a,i);if(!o(r,s))throw new Error("This position is illegal!");return i.position=s,i.position}function i(e){const t=n[e];if(t.orientation=1-t.orientation,t.position)try{a(e,t.position)}catch(n){throw i(e),n}return t.orientation}n.forEach((n=>Object.assign(n,{orientation:0,area:r})));const s=T(e);return{[`place${s}`]:a,[`legal${s}Placement`]:o,[`all${s}sPlaced`]:function(){return n.every((n=>n.position))},[`rotate${s}`]:i,[`autoPlace${s}s`]:function(){n.forEach(((n,e)=>{for(Math.floor(2*Math.random())&&i(e);!n.position;)try{a(e,[...new Array(2)].map((()=>Math.floor(Math.random()*t))))}catch{}}))}}}function O(n,e,t,{moveable:r=!1,allMethodNames:o=[],countMethodNames:a=[]}={}){const i=n.map((n=>({[e]:t(n)}))),s=o.reduce(((n,t)=>{const r=T(t);return{...n,[`all${r}`]:function(){return i.every((n=>n[e][`is${r}`]()))}}}),{}),A=a.reduce(((n,t)=>{const r=T(t),o=T(e);function a(n){return i.filter((t=>t[e][`is${r}`]()===n)).length}return{...n,[`${t}${o}s`]:function(){return a(!0)},[`not${r}${o}s`]:function(){return a(!1)}}}),{});return{[`${e}s`]:i,...s,...A,...r?N(i,e,r.areaLength||1/0):{}}}function W(n){return{name:n,setName:function(n){this.name=n}}}function U(n,{attackItemName:e}={}){return{attacks:n,receiveAttack:function(t){let r=!0;return e&&(r=function(n,t){for(let r=0;r<n.length;r+=1){const o=n[r];if(R(t,o.area()))return o[e].hit(),!0}return!1}(this[`${e}s`],t)),n.push({position:t,hit:r}),r}}}function G({auto:n=!1}={}){function e(n,e){return R(e,(n.attacks||[]).map((n=>n.position)))}return{attack:function(n,t){if(e(n,t))throw new Error("That position has already been attacked!");return n.receiveAttack(t)},...n?function(){function n(n){return[...new Array(2)].map((()=>Math.floor(Math.random()*n.length)))}function t(n,e){return e&&e.every((e=>e>=0&&e<n.length))}const r=[],o=[];return{autoAttack:function(a){let i;for(;!t(a,i)||R(i,r)||e(a,i);)i=o.pop()||n(a);const s=this.attack(a,i);return s&&function(n){!function([n,e]){[[-1,-1],[-1,1],[1,-1],[1,1]].forEach((([t,o])=>{r.push([n+t,e+o])}))}(n),function([n,e]){const t=[[-1,0],[1,0],[0,-1],[0,1]];for(;t.length;){const r=Math.floor(Math.random()*t.length),[a,i]=t.splice(r,1)[0];o.push([n+a,e+i])}}(n)}(i),s}}}():{}}}function X({method:n=null}={}){return{takeTurn:function(e){return!!n&&(this[n](e),!0)}}}function H({length:n=2,hits:e=0}={}){return{type:"Ship",...j(n),...Z(n,e)}}function D(n="Player"){return{type:"humanPlayer",...W(n),...G(),...X()}}const Y={modes:{playerMode:0},players:[],gameboards:[],currPlayerIndex:0,gameOver:!1};function _({playerMode:n=0,gameboardLength:e=10,shipLengths:t=[5,4,3,3,2]}={}){!function(n){const e={...n};Object.keys(e).forEach((n=>{e[n]=Number(e[n])})),Y.modes=e}({playerMode:n}),function(){if(1===Y.modes.playerMode)Y.players=[...new Array(2)].map((()=>D()));else{Y.players=[];const n=Math.floor(2*Math.random());Y.players[n]=D(),Y.players[1-n]={type:"computerPlayer",...W("Computer"),...G({auto:!0}),...X({method:"autoAttack"})}}}(),function(n,e){Y.gameboards=[...new Array(2)].map((()=>function({shipLengths:n=[5,4,3,3,2],length:e=10,attacks:t=[]}={}){return{type:"Gameboard",...j(e),...O(n.map((n=>j(n))),"ship",H,{moveable:{areaLength:e},allMethodNames:["sunk"],countMethodNames:["sunk"]}),...U(t,{attackItemName:"ship"})}}({length:n,shipLengths:e}))),Y.gameboards[J()]?.autoPlaceShips()}(e,t),Y.currPlayerIndex=0,Y.gameOver=!1}function J(){return Y.players.findIndex((n=>"computerPlayer"===n.type))}function K(){return Y.gameboards[1-Y.currPlayerIndex]}function Q(){return Y.players[Y.currPlayerIndex]}function V(){const{attacks:n}=K();return n?.[n.length-1]&&!n[n.length-1].hit}function nn(n=!1){let e=n;for(;!Y.gameOver&&(e||=Q().takeTurn(K()),e);)Y.gameOver=Y.gameboards.some((n=>n.allSunk())),V()&&(Y.currPlayerIndex=1-Y.currPlayerIndex),e=!1}const en=[];function tn(n,e){return en.find((({position:t,gameAreaIndex:r})=>{return n===r&&(o=t,e.every(((n,e)=>o[e]===n)));var o})).square}let rn=-1;function on(){g.classList.add("hidden");const n=Y.gameboards.findIndex((n=>!n.allShipsPlaced()));if(n<0)return A.forEach((n=>n.classList.add("disabled"))),p().forEach((n=>{n.classList.add("hidden");const e=n.closest(".square");e&&e.classList.add("with-background-ship"),n.draggable=!1})),h().forEach((n=>n.classList.add("hidden"))),w("Click the Start button to begin the game!"),void f.classList.remove("hidden");const e=Y.players[n].name;S(n,!0),w(`${e} (Player ${n+1}), place your ships.`),rn>=0&&n!==rn&&q(e,n),rn=n}function an(){k(),P(Y.players.map((n=>n.name))),[...l()].forEach(((n,e)=>{en[e]={square:n,position:[Math.floor(n.dataset.index/10),n.dataset.index%10],gameAreaIndex:Number(n.closest(".game-area").dataset.index)}})),function(){function n(n,e=Y.gameboards[rn].ships[Number(n.dataset.index)].position){n.classList.add("on-gameboard"),tn(rn,e).appendChild(n)}function e(e){const t=e.target.closest(".ship"),[r,o]=["gameAreaIndex","index"].map((n=>Number(t.dataset[n]))),a=Y.gameboards[r].ships[o].position;try{Y.gameboards[r].rotateShip(o)}catch{return void function(n,e){I(n),F(e,Number(n.dataset.orientation),z[Number(n.dataset.index)],Number(n.dataset.gameAreaIndex),!1),setTimeout((()=>{I(n),$()}),500)}(t,a)}a&&n(t),I(t)}!function(){let e;en.forEach((({square:t,position:r,gameAreaIndex:o})=>{t.addEventListener("dragover",(function(n){if(n.preventDefault(),n.dataTransfer.dropEffect="move",rn!==o)return;const t=Number(e.dataset.index),a=Number(e.dataset.orientation),i=Y.gameboards[o].legalShipPlacement(t,r);F(r,a,z[t],o,i)})),t.addEventListener("dragleave",$),t.addEventListener("drop",(function(){if(rn!==o)return;const t=Number(e.dataset.index);try{Y.gameboards[o].placeShip(t,r)}catch{return}n(e),Y.gameboards[o].allShipsPlaced()&&g.classList.remove("hidden")}))}));const t=p();t.forEach((n=>{n.addEventListener("drag",(function(){n.classList.add("invisible"),n.classList.add("dragged")})),n.addEventListener("dragstart",(function(r){e=n,n.classList.add("dragged");const o=Number(n.dataset.squareLength)/2;r.dataTransfer.setDragImage(n,o,o),t.forEach((e=>{e!==n&&e.classList.contains("on-gameboard")&&e.closest(".square").classList.add("with-background-ship")}))})),n.addEventListener("dragend",(function(){n.classList.remove("invisible"),n.classList.remove("dragged"),$(),t.forEach((n=>{n.closest(".square")?.classList?.remove("with-background-ship")}))}))}))}(),h().forEach((n=>n.addEventListener("click",e)))}(),on()}function sn(){b.classList.add("hidden"),v(),e.classList.remove("hidden")}function An(n){_({playerMode:Number(n.target.closest("button").dataset.mode),gameboardLength:10,shipLengths:z}),function(n){v(),o.classList.remove("hidden"),a.querySelectorAll(".field").forEach((n=>n.remove()));for(let e=n;e>=0;e-=1)a.insertAdjacentHTML("afterBegin",x(e,n))}(Y.modes.playerMode)}function cn(n=0){const e=1-J();setTimeout((()=>{const t=Y.gameboards[e].attacks;for(let r=n;r<t.length;r+=1){const n=t[r],o=tn(e,n.position);if(!o.classList.contains("attacked")){M(o,n.hit),r+=1,r===t.length?ln(!1):cn(r);break}}}),1e3)}function dn(n=!0){Y.gameOver&&("computerPlayer"!==Q().type||!n)&&(w(`Game over! ${Q().name} (Player ${Y.currPlayerIndex+1}) wins.`),A.forEach((n=>n.classList.add("disabled"))),b.classList.remove("hidden"))}function ln(n=!0){const e=V()&&n&&Y.players[J()]||Q(),t=Y.players.indexOf(e),r="computerPlayer"===e.type;w(`${e.name} (Player ${t+1})'s turn...`),S(1-t,r),K().attacks.forEach((n=>{M(tn(1-Y.currPlayerIndex,n.position),n.hit)})),r&&cn(),Y.gameboards.forEach(((n,e)=>{return t=e,r=n.notSunkShips(),void(E[t].textContent=r);var t,r})),dn(n)}g.addEventListener("click",on),window.addEventListener("load",sn),b.addEventListener("click",sn),r.forEach((n=>n.addEventListener("click",An))),a.addEventListener("submit",(function(n){n.preventDefault();const e=[...n.target.querySelectorAll("input")].map((n=>n.value));let t=0;Y.players.forEach((n=>{"humanPlayer"===n.type&&(n.setName(e[t]),t+=1)})),an()})),B.addEventListener("click",k),f.addEventListener("click",(function(){var n;f.classList.add("hidden"),n=z.length,u.forEach((n=>n.classList.remove("hidden"))),E.forEach((e=>{e.textContent=n})),en.forEach((({square:n,position:e,gameAreaIndex:t})=>{n.addEventListener("click",(function(){if(!A[t].classList.contains("disabled")&&(n=t,!Y.gameOver&&n===1-Y.currPlayerIndex)){var n;try{Q().attack(K(),e)}catch{return}ln(),1===Y.modes.playerMode&&V()&&setTimeout((()=>{q(Q().name,Y.currPlayerIndex),ln()}),1e3),nn(!0),dn()}}))})),1===Y.modes.playerMode&&q(Y.players[0].name,0),ln(),nn()}));var un=t(379),En=t.n(un),mn=t(795),pn=t.n(mn),hn=t(569),gn=t.n(hn),fn=t(565),bn=t.n(fn),Cn=t(216),yn=t.n(Cn),Bn=t(589),vn=t.n(Bn),xn=t(735),kn={};kn.styleTagTransform=vn(),kn.setAttributes=bn(),kn.insert=gn().bind(null,"head"),kn.domAPI=pn(),kn.insertStyleElement=yn(),En()(xn.Z,kn),xn.Z&&xn.Z.locals&&xn.Z.locals;var wn=t(689),Sn={};Sn.styleTagTransform=vn(),Sn.setAttributes=bn(),Sn.insert=gn().bind(null,"head"),Sn.domAPI=pn(),Sn.insertStyleElement=yn(),En()(wn.Z,Sn),wn.Z&&wn.Z.locals&&wn.Z.locals;var Mn=t(826),qn={};qn.styleTagTransform=vn(),qn.setAttributes=bn(),qn.insert=gn().bind(null,"head"),qn.domAPI=pn(),qn.insertStyleElement=yn(),En()(Mn.Z,qn),Mn.Z&&Mn.Z.locals&&Mn.Z.locals;var zn=t(20),Ln={};Ln.styleTagTransform=vn(),Ln.setAttributes=bn(),Ln.insert=gn().bind(null,"head"),Ln.domAPI=pn(),Ln.insertStyleElement=yn(),En()(zn.Z,Ln),zn.Z&&zn.Z.locals&&zn.Z.locals;var In=t(535),Fn={};Fn.styleTagTransform=vn(),Fn.setAttributes=bn(),Fn.insert=gn().bind(null,"head"),Fn.domAPI=pn(),Fn.insertStyleElement=yn(),En()(In.Z,Fn),In.Z&&In.Z.locals&&In.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,