(()=>{"use strict";var n={735:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const s=i},689:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.game-areas {\n  display: flex;\n  gap: 2rem;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: red;\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: green;\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.ships {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(3, max-content);\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.ship button.rotate {\n  grid-row: 1;\n  grid-column: 3 / span 2;\n  justify-self: center;\n  align-self: center;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: gray;\n}\n\n.disabled .ship-square.full {\n  background-color: gray;\n}\n\n.disabled .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, gray 50%, transparent 50%);\n}\n\n.disabled .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, gray 50%, transparent 50%);\n}\n',"",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,0BAA0B;EAC1B,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;EAC3B,kBAAkB;EAClB,6BAA6B;EAC7B,UAAU;EACV,aAAa;AACf;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,6CAA6C;EAC7C,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,WAAW;EACX,uBAAuB;EACvB,oBAAoB;EACpB,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;EACpB,cAAc;AAChB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,6EAA6E;AAC/E;;AAEA;EACE,4EAA4E;AAC9E;;AAEA;EACE,4EAA4E;AAC9E;;AAEA;EACE,6EAA6E;AAC/E",sourcesContent:['* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.game-areas {\n  display: flex;\n  gap: 2rem;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: red;\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: green;\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.ships {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(3, max-content);\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.ship button.rotate {\n  grid-row: 1;\n  grid-column: 3 / span 2;\n  justify-self: center;\n  align-self: center;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: gray;\n}\n\n.disabled .ship-square.full {\n  background-color: gray;\n}\n\n.disabled .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, gray 50%);\n}\n\n.disabled .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, gray 50%, transparent 50%);\n}\n\n.disabled .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, gray 50%, transparent 50%);\n}\n'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var u=t(l),E={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(E);else{var p=o(E,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=document.querySelectorAll("main > section"),e=document.querySelector("section.mode-selection"),r=document.querySelectorAll(".mode-selection button"),o=document.querySelector("section.player-set-up"),a=document.querySelector("section.player-set-up form"),i=document.querySelector("section.game"),s=document.querySelector(".game .message"),A=document.querySelectorAll(".game .game-area"),c=document.querySelectorAll(".game .gameboard-label"),d=document.querySelectorAll(".game .gameboard"),l=()=>document.querySelectorAll(".game .gameboard .square"),u=document.querySelectorAll(".game .ships"),E=()=>document.querySelectorAll(".game .ship"),p=()=>document.querySelectorAll(".ship button.rotate"),m=document.querySelector("button.update-gameboard-set-up"),h=document.querySelector("button.start-game"),f=document.querySelector("button.reset-game"),g=document.querySelector("section.pass-device"),b=document.querySelector(".pass-device button.pass-device-continue");function C(){n.forEach((n=>n.classList.add("hidden")))}function y(n,e){return`<div class="field">\n    <label for="player-${n}-name">Player${e?` ${n+1}`:""} Name</label>\n    <input type="text" name="player-${n}-name" id="player-${n}-name">\n  </div>`}function v(){C(),i.classList.remove("hidden")}function B(n){s.textContent=n}function x(n,e=!1){A.forEach(((t,r)=>{const o=t.querySelectorAll(".ship");r!==n?(t.classList.add("disabled"),o.forEach((n=>{e?n.classList.add("hidden"):n.classList.remove("hidden")}))):(t.classList.remove("disabled"),o.forEach((n=>{e?n.classList.remove("hidden"):n.classList.add("hidden")})))}))}function k(n,e){n.classList.contains("attacked")||(n.classList.add(e?"hit":"miss","attacked"),n.insertAdjacentHTML("beforeend",`<p class="marker">${e?"X":"O"}</p>`))}const w=[5,4,3,3,2];function M(n){n.dataset.orientation=1-Number(n.dataset.orientation),n.style.gridTemplate=n.style.gridTemplate.split(" / ").reverse().join(" / ")}function S([n,e],t,r,o,a){const i=[[-1,0],[r,0]];for(let n=-1;n<=r;n+=1)i.push([n,-1],[n,1]);i.map((r=>{const[o,a]=t?r.reverse():r;return[n+o,e+a]})).filter((n=>n.every((n=>n>=0&&n<10)))).forEach((([n,e])=>{const t=10*n+e;d[o].querySelector(`.square[data-index="${t}"]`).classList.add((a?"legal":"error")+"-border")}))}function q(){l().forEach((n=>{n.classList.remove("legal-border","error-border")}))}function z(n){return n[0].toUpperCase()+n.slice(1)}function L(n,e){return e.some((e=>e.every(((e,t)=>e===n[t]))))}function I(n){return{length:n}}function F(n,e){let t=e;return{hit:function(){t+=1},isSunk:function(){return n===t}}}function R(n,e,t=1/0){function r(n=this.position){const t=[];if(void 0===n||void 0===this.orientation)return t;const r=this.orientation;for(let o=0;o<this[e].length;o+=1){const e=[...n];e[r]+=o,t.push(e)}return t}function o(e,t){return n[e].area(t).every((t=>!L(t,function({excluding:e}={}){return n.reduce(((n,t,r)=>{if(!t.position||e.includes(r))return n;const o=t.area();return[...n,...o,...(a=o,a.reduce(((n,[e,t])=>[...n,...[[1,0],[-1,0],[0,1],[0,-1],[1,1],[1,-1],[-1,1],[-1,1]].map((([n,r])=>[e+n,t+r])).filter((n=>!L(n,a)))]),[]))];var a}),[])}({excluding:[e]}))))}function a(r,a){const i=n[r],s=function(n,r){const o=[t-r[e].length,t-1],a=0===r.orientation?o:[...o].reverse();return n.map(((n,e)=>Math.max(0,Math.min(a[e],n))))}(a,i);if(!o(r,s))throw new Error("This position is illegal!");return i.position=s,i.position}function i(e){const t=n[e];if(t.orientation=1-t.orientation,t.position)try{a(e,t.position)}catch(n){throw i(e),n}return t.orientation}n.forEach((n=>Object.assign(n,{orientation:0,area:r})));const s=z(e);return{[`place${s}`]:a,[`legal${s}Placement`]:o,[`all${s}sPlaced`]:function(){return n.every((n=>n.position))},[`rotate${s}`]:i,[`autoPlace${s}s`]:function(){n.forEach(((n,e)=>{for(Math.floor(2*Math.random())&&i(e);!n.position;)try{a(e,[...new Array(2)].map((()=>Math.floor(Math.random()*t))))}catch{}}))}}}function T(n,e,t,{moveable:r=!1,allMethodNames:o=[]}={}){const a=n.map((n=>({[e]:t(n)}))),i=o.reduce(((n,t)=>{const r=z(t);return{...n,[`all${r}`]:function(){return a.every((n=>n[e][`is${r}`]()))}}}),{});return{[`${e}s`]:a,...i,...r?R(a,e,r.areaLength||1/0):{}}}function P(n){return{name:n,setName:function(n){this.name=n}}}function $(n,{attackItemName:e}={}){return{attacks:n,receiveAttack:function(t){let r=!0;return e&&(r=function(n,t){for(let r=0;r<n.length;r+=1){const o=n[r];if(L(t,o.area()))return o[e].hit(),!0}return!1}(this[`${e}s`],t)),n.push({position:t,hit:r}),r}}}function N({auto:n=!1}={}){function e(n,e){return L(e,(n.attacks||[]).map((n=>n.position)))}return{attack:function(n,t){if(e(n,t))throw new Error("That position has already been attacked!");return n.receiveAttack(t)},...n?function(){function n(n){return[...new Array(2)].map((()=>Math.floor(Math.random()*n.length)))}function t(n,e){return e&&e.every((e=>e>=0&&e<n.length))}const r=[],o=[];return{autoAttack:function(a){let i;for(;!t(a,i)||L(i,r)||e(a,i);)i=o.pop()||n(a);const s=this.attack(a,i);return s&&function(n){!function([n,e]){[[-1,-1],[-1,1],[1,-1],[1,1]].forEach((([t,o])=>{r.push([n+t,e+o])}))}(n),function([n,e]){const t=[[-1,0],[1,0],[0,-1],[0,1]];for(;t.length;){const r=Math.floor(Math.random()*t.length),[a,i]=t.splice(r,1)[0];o.push([n+a,e+i])}}(n)}(i),s}}}():{}}}function O({method:n=null}={}){return{takeTurn:function(e){return!!n&&(this[n](e),!0)}}}function j({length:n=2,hits:e=0}={}){return{type:"Ship",...I(n),...F(n,e)}}function G(n="Player"){return{type:"humanPlayer",...P(n),...N(),...O()}}const U={modes:{playerMode:0},players:[],gameboards:[],currPlayerIndex:0,gameOver:!1};function Z({playerMode:n=0,gameboardLength:e=10,shipLengths:t=[5,4,3,3,2]}={}){!function(n){const e={...n};Object.keys(e).forEach((n=>{e[n]=Number(e[n])})),U.modes=e}({playerMode:n}),function(){if(1===U.modes.playerMode)U.players=[...new Array(2)].map((()=>G()));else{U.players=[];const n=Math.floor(2*Math.random());U.players[n]=G(),U.players[1-n]={type:"computerPlayer",...P("Computer"),...N({auto:!0}),...O({method:"autoAttack"})}}}(),function(n,e){U.gameboards=[...new Array(2)].map((()=>function({shipLengths:n=[5,4,3,3,2],length:e=10,attacks:t=[]}={}){return{type:"Gameboard",...I(e),...T(n.map((n=>I(n))),"ship",j,{moveable:{areaLength:e},allMethodNames:["sunk"]}),...$(t,{attackItemName:"ship"})}}({length:n,shipLengths:e}))),U.gameboards[W()]?.autoPlaceShips()}(e,t),U.currPlayerIndex=0,U.gameOver=!1}function W(){return U.players.findIndex((n=>"computerPlayer"===n.type))}function H(){return U.gameboards[1-U.currPlayerIndex]}function D(){return U.players[U.currPlayerIndex]}function X(){const{attacks:n}=H();return n?.[n.length-1]&&!n[n.length-1].hit}function Y(n=!1){let e=n;for(;!U.gameOver&&(e||=D().takeTurn(H()),e);)U.gameOver=U.gameboards.some((n=>n.allSunk())),X()&&(U.currPlayerIndex=1-U.currPlayerIndex),e=!1}const _=[];function J(n,e){return _.find((({position:t,gameAreaIndex:r})=>{return n===r&&(o=t,e.every(((n,e)=>o[e]===n)));var o})).square}function K(){m.classList.add("hidden");const n=U.gameboards.findIndex((n=>!n.allShipsPlaced()));if(n<0)return A.forEach((n=>n.classList.add("disabled"))),E().forEach((n=>{n.classList.add("hidden");const e=n.closest(".square");e&&e.classList.add("with-background-ship"),n.draggable=!1})),p().forEach((n=>n.classList.add("hidden"))),B("Click the Start button to begin the game!"),void h.classList.remove("hidden");x(n,!0),B(`${U.players[n].name}, place your ships.`)}function Q(){v(),function(n){c.forEach(((e,t)=>{e.textContent=`${n[t]}'s Shipyard`}));const e=Math.min(window.innerHeight,window.innerWidth)/22.5;!function(n,e){d.forEach((e=>{e.style.display="grid",e.style.gridTemplate=`repeat(10, ${n}px) / repeat(10, ${n}px)`,e.textContent="";for(let n=0;n<100;n+=1)e.insertAdjacentHTML("beforeend",`<button class="square" data-index="${n}"></button>`)}))}(e),function(n){u.forEach(((e,t)=>{e.textContent="",w.forEach(((r,o)=>{e.insertAdjacentHTML("beforeend",function(n,e,t,r){let o=`<div style="display: grid; grid-template: repeat(${e}, ${n}px) / repeat(4, ${n/2}px);" class="ship" data-game-area-index="${r}" data-index="${t}" data-square-length="${n}" data-orientation="0" draggable="true">`;for(let n=0;n<e;n+=1)0===n?(o+='<div class="ship-square top-left"></div>',o+='<div class="ship-square top-right"></div>'):n===e-1?(o+='<div class="ship-square bottom-left"></div>',o+='<div class="ship-square bottom-right"></div>'):o+='<div class="ship-square full"></div>';return o+='<button class="rotate">R</button></div>',o}(n,r,o,t))}))}))}(e)}(U.players.map((n=>n.name))),[...l()].forEach(((n,e)=>{_[e]={square:n,position:[Math.floor(n.dataset.index/10),n.dataset.index%10],gameAreaIndex:Number(n.closest(".game-area").dataset.index)}})),function(){function n(n,e=Number(n.dataset.gameAreaIndex),t=U.gameboards[e].ships[Number(n.dataset.index)].position){n.classList.add("on-gameboard"),J(e,t).appendChild(n)}function e(e){const t=e.target.closest(".ship"),[r,o]=["gameAreaIndex","index"].map((n=>Number(t.dataset[n]))),a=U.gameboards[r].ships[o].position;try{U.gameboards[r].rotateShip(o)}catch{return void function(n,e){M(n),S(e,Number(n.dataset.orientation),w[Number(n.dataset.index)],Number(n.dataset.gameAreaIndex),!1),setTimeout((()=>{M(n),q()}),500)}(t,a)}a&&n(t),M(t)}!function(){let e;_.forEach((({square:t,position:r,gameAreaIndex:o})=>{t.addEventListener("dragover",(function(n){if(n.preventDefault(),n.dataTransfer.dropEffect="move",Number(e.dataset.gameAreaIndex)!==o)return;const t=Number(e.dataset.index),a=Number(e.dataset.orientation),i=U.gameboards[o].legalShipPlacement(t,r);S(r,a,w[t],o,i)})),t.addEventListener("dragleave",q),t.addEventListener("drop",(function(){if(Number(e.dataset.gameAreaIndex)!==o)return;const t=Number(e.dataset.index);try{U.gameboards[o].placeShip(t,r)}catch{return}n(e),U.gameboards[o].allShipsPlaced()&&m.classList.remove("hidden")}))}));const t=E();t.forEach((n=>{n.addEventListener("drag",(function(){n.classList.add("hidden")})),n.addEventListener("dragstart",(function(r){e=n;const o=Number(n.dataset.squareLength)/2;r.dataTransfer.setDragImage(n,o,o),t.forEach((e=>{e!==n&&e.classList.contains("on-gameboard")&&e.closest(".square").classList.add("with-background-ship")}))})),n.addEventListener("dragend",(function(){n.classList.remove("hidden"),q(),t.forEach((n=>{n.closest(".square")?.classList?.remove("with-background-ship")}))}))}))}(),p().forEach((n=>n.addEventListener("click",e)))}(),K()}function V(){f.classList.add("hidden"),C(),e.classList.remove("hidden")}function nn(n){Z({playerMode:Number(n.target.closest("button").dataset.mode),gameboardLength:10,shipLengths:w}),function(n){C(),o.classList.remove("hidden"),a.querySelectorAll(".field").forEach((n=>n.remove()));for(let e=n;e>=0;e-=1)a.insertAdjacentHTML("afterBegin",y(e,n))}(U.modes.playerMode)}function en(n=0){const e=1-W();setTimeout((()=>{const t=U.gameboards[e].attacks;for(let r=n;r<t.length;r+=1){const n=t[r],o=J(e,n.position);if(!o.classList.contains("attacked")){k(o,n.hit),r+=1,r===t.length?rn(!1):en(r);break}}}),1e3)}function tn(n=!0){U.gameOver&&("computerPlayer"!==D().type||!n)&&(B(`Game over! ${D().name} wins.`),A.forEach((n=>n.classList.add("disabled"))),f.classList.remove("hidden"))}function rn(n=!0){const e=X()&&n&&U.players[W()]||D(),t="computerPlayer"===e.type;B(`${e.name}'s turn...`),x(1-U.players.indexOf(e),t),H().attacks.forEach((n=>{k(J(1-U.currPlayerIndex,n.position),n.hit)})),t&&en(),tn(n)}function on(){_.forEach((({square:n,position:e,gameAreaIndex:t})=>{n.addEventListener("click",(function(){if(!A[t].classList.contains("disabled")&&(n=t,!U.gameOver&&n===1-U.currPlayerIndex)){var n;try{D().attack(H(),e)}catch{return}rn(),1===U.modes.playerMode&&X()&&setTimeout((()=>{C(),g.classList.remove("hidden"),rn()}),1e3),Y(!0),tn()}}))}))}m.addEventListener("click",K),window.addEventListener("load",V),f.addEventListener("click",V),r.forEach((n=>n.addEventListener("click",nn))),a.addEventListener("submit",(function(n){n.preventDefault();const e=[...n.target.querySelectorAll("input")].map((n=>n.value));let t=0;U.players.forEach((n=>{"humanPlayer"===n.type&&(n.setName(e[t]),t+=1)})),Q()})),b.addEventListener("click",v),h.addEventListener("click",(function(){h.classList.add("hidden"),on(),rn(),Y()}));var an=t(379),sn=t.n(an),An=t(795),cn=t.n(An),dn=t(569),ln=t.n(dn),un=t(565),En=t.n(un),pn=t(216),mn=t.n(pn),hn=t(589),fn=t.n(hn),gn=t(735),bn={};bn.styleTagTransform=fn(),bn.setAttributes=En(),bn.insert=ln().bind(null,"head"),bn.domAPI=cn(),bn.insertStyleElement=mn(),sn()(gn.Z,bn),gn.Z&&gn.Z.locals&&gn.Z.locals;var Cn=t(689),yn={};yn.styleTagTransform=fn(),yn.setAttributes=En(),yn.insert=ln().bind(null,"head"),yn.domAPI=cn(),yn.insertStyleElement=mn(),sn()(Cn.Z,yn),Cn.Z&&Cn.Z.locals&&Cn.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,