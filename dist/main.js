(()=>{"use strict";var n={735:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const A=i},689:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,":root {\n  --site-font: 'Helvetica', 'sans-serif';\n  --background-color: #b37d4e;\n  --secondary-color: #438496;\n  --light-secondary-color: #baf0ff;\n  --dark-secondary-color: #286da8;\n  --tertiary-color: #cd5360;\n  --light-tertiary-color: #ffbfc5;\n  --dark-tertiary-color: #ce2536;\n  --font-color: white;\n  --border: 2px solid white;\n  --box-shadow: 0 0 10px #3c3c3c;\n  --heading-text-stroke: -2px -2px 0 var(--tertiary-color),\n    -2px 2px 0 var(--tertiary-color),\n    2px -2px 0 var(--tertiary-color),\n    2px 2px 0 var(--tertiary-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: var(--site-font);\n  color: var(--font-color);\n}\n\nheader {\n  background-color: var(--secondary-color);\n  box-shadow: var(--box-shadow);\n  text-shadow: var(--heading-text-stroke);\n  z-index: 2;\n  padding: 1rem;\n  font-size: 3rem;\n  letter-spacing: 0.1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader img {\n  width: 3.5rem;\n}\n\nheader .slant-left {\n  transform: rotate(-20deg);\n}\n\nheader .slant-right {\n  transform: rotate(20deg);\n}\n\nmain {\n  background-color: var(--background-color);\n  padding: 1rem;\n  flex: 1 1 0;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\ninput {\n  min-width: 18rem;\n  padding: 0.25rem;\n}\n\np {\n  margin: 0;\n}\n\nbutton:not(.square) {\n  cursor: pointer;\n}\n\nbutton:not(.rotate):not(.square) {\n  background-color: var(--tertiary-color);\n  color: white;\n  box-shadow: var(--box-shadow);\n  border: var(--border);\n  border-radius: 0.2rem;\n  padding: 0.5rem 1.5rem;\n}\n\nbutton:not(.rotate):not(.square):hover {\n  background-color: var(--dark-tertiary-color);\n}\n\n.dragging, .dragging * {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.legal-drag.legal-drag {\n  background-color: var(--light-secondary-color);\n}\n\n.error-drag.error-drag {\n  background-color: var(--light-tertiary-color);\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n}\n\n.error {\n  text-shadow: -1px -1px 0 var(--dark-tertiary-color), -1px 1px 0 var(--dark-tertiary-color),\n               1px -1px 0 var(--dark-tertiary-color), 1px 1px 0 var(--dark-tertiary-color);\n}\n\n.hidden {\n  display: none !important;\n}\n\n.hidden-visibility {\n  visibility: hidden;\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,sCAAsC;EACtC,2BAA2B;EAC3B,0BAA0B;EAC1B,gCAAgC;EAChC,+BAA+B;EAC/B,yBAAyB;EACzB,+BAA+B;EAC/B,8BAA8B;EAC9B,mBAAmB;EACnB,yBAAyB;EACzB,8BAA8B;EAC9B;;;mCAGiC;AACnC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,6BAA6B;EAC7B,wBAAwB;AAC1B;;AAEA;EACE,wCAAwC;EACxC,6BAA6B;EAC7B,uCAAuC;EACvC,UAAU;EACV,aAAa;EACb,eAAe;EACf,sBAAsB;EACtB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,yCAAyC;EACzC,aAAa;EACb,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uCAAuC;EACvC,YAAY;EACZ,6BAA6B;EAC7B,qBAAqB;EACrB,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE;0FACwF;AAC1F;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:[":root {\n  --site-font: 'Helvetica', 'sans-serif';\n  --background-color: #b37d4e;\n  --secondary-color: #438496;\n  --light-secondary-color: #baf0ff;\n  --dark-secondary-color: #286da8;\n  --tertiary-color: #cd5360;\n  --light-tertiary-color: #ffbfc5;\n  --dark-tertiary-color: #ce2536;\n  --font-color: white;\n  --border: 2px solid white;\n  --box-shadow: 0 0 10px #3c3c3c;\n  --heading-text-stroke: -2px -2px 0 var(--tertiary-color),\n    -2px 2px 0 var(--tertiary-color),\n    2px -2px 0 var(--tertiary-color),\n    2px 2px 0 var(--tertiary-color);\n}\n\nhtml {\n  font-size: 18px;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: var(--site-font);\n  color: var(--font-color);\n}\n\nheader {\n  background-color: var(--secondary-color);\n  box-shadow: var(--box-shadow);\n  text-shadow: var(--heading-text-stroke);\n  z-index: 2;\n  padding: 1rem;\n  font-size: 3rem;\n  letter-spacing: 0.1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader img {\n  width: 3.5rem;\n}\n\nheader .slant-left {\n  transform: rotate(-20deg);\n}\n\nheader .slant-right {\n  transform: rotate(20deg);\n}\n\nmain {\n  background-color: var(--background-color);\n  padding: 1rem;\n  flex: 1 1 0;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\ninput {\n  min-width: 18rem;\n  padding: 0.25rem;\n}\n\np {\n  margin: 0;\n}\n\nbutton:not(.square) {\n  cursor: pointer;\n}\n\nbutton:not(.rotate):not(.square) {\n  background-color: var(--tertiary-color);\n  color: white;\n  box-shadow: var(--box-shadow);\n  border: var(--border);\n  border-radius: 0.2rem;\n  padding: 0.5rem 1.5rem;\n}\n\nbutton:not(.rotate):not(.square):hover {\n  background-color: var(--dark-tertiary-color);\n}\n\n.dragging, .dragging * {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.legal-drag.legal-drag {\n  background-color: var(--light-secondary-color);\n}\n\n.error-drag.error-drag {\n  background-color: var(--light-tertiary-color);\n}\n\n.field {\n  display: flex;\n  flex-direction: column;\n}\n\n.error {\n  text-shadow: -1px -1px 0 var(--dark-tertiary-color), -1px 1px 0 var(--dark-tertiary-color),\n               1px -1px 0 var(--dark-tertiary-color), 1px 1px 0 var(--dark-tertiary-color);\n}\n\n.hidden {\n  display: none !important;\n}\n\n.hidden-visibility {\n  visibility: hidden;\n}\n"],sourceRoot:""}]);const A=i},535:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,'.game {\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.game .message {\n  align-self: stretch;\n  background-color: var(--tertiary-color);\n  border-bottom: var(--border);\n  box-shadow: 0 10px 10px -10px #3c3c3c;\n  padding: 1rem;\n  font-size: 1.5rem;\n  text-align: center;\n}\n\n.game button:not(.rotate):not(.square) {\n  margin-bottom: 1rem;\n}\n\n.game .start-game.start-game {\n  position: absolute;\n  top: 50vh;\n  font-size: 1.5rem;\n  padding: 1.5rem 3rem;\n}\n\n.game-areas {\n  padding: 1rem;\n  width: 100%;\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, 1fr);\n}\n\n.game-area {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.play .square, .square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.play .square .ship, .square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: var(--dark-tertiary-color);\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: rgba(0, 128, 0, 0.5);\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.play:not(.disabled) .square.clickable {\n  cursor: pointer;\n}\n\n.play:not(.disabled) .square.clickable:hover {\n  background-color: var(--light-secondary-color);\n}\n\n.marker {\n  width: 100%;\n  align-self: center;\n}\n\n.hit .marker {\n  font-weight: 900;\n  font-size: 170%;\n}\n\n.miss .marker {\n  font-size: 50%;\n}\n\n.ships {\n  margin-top: 1rem;\n  padding: 1rem;\n  min-width: 75%;\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 0.2rem;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: var(--secondary-color);\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, var(--secondary-color) 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, var(--secondary-color) 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, var(--secondary-color) 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, var(--secondary-color) 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.invisible .ship-square {\n  background-image: none;\n  background-color: transparent;\n}\n\n*[draggable="true"] .ship-square {\n  cursor: pointer;\n}\n\n.dragging .ship-square {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.ship button.rotate {\n  width: 100%;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  grid-row: 1;\n  grid-column: 3 / span 2;\n}\n\n.ship button.rotate img {\n  width: 100%;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.invisible button.rotate {\n  visibility: hidden;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: lightgray;\n}\n\n.set-up .remaining-ships, .disabled .ships, .play .ships, .play .ship button.rotate {\n  display: none;\n}\n\n.play:not(.disabled) .ship-square.full {\n  background-color: var(--light-secondary-color);\n}\n\n.play:not(.disabled) .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, var(--light-secondary-color) 50%);\n}\n\n.play:not(.disabled) .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, var(--light-secondary-color) 50%);\n}\n\n.play:not(.disabled) .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, var(--light-secondary-color) 50%, transparent 50%);\n}\n\n.play:not(.disabled) .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, var(--light-secondary-color) 50%, transparent 50%);\n}\n',"",{version:3,sources:["webpack://./src/styles/game.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,qBAAqB;EACrB,6BAA6B;EAC7B,6CAA6C;EAC7C,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,uCAAuC;EACvC,4BAA4B;EAC5B,qCAAqC;EACrC,aAAa;EACb,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,aAAa;EACb,sDAAsD;AACxD;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,0BAA0B;EAC1B,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;EAC3B,kBAAkB;EAClB,6BAA6B;EAC7B,UAAU;EACV,aAAa;AACf;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,iCAAiC;AACnC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,cAAc;EACd,uBAAuB;EACvB,uBAAuB;EACvB,qBAAqB;EACrB,aAAa;EACb,6CAA6C;EAC7C,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,+FAA+F;EAC/F,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,8FAA8F;EAC9F,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,8FAA8F;EAC9F,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,+FAA+F;EAC/F,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,sBAAsB;EACtB,6BAA6B;AAC/B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,UAAU;EACV,6BAA6B;EAC7B,YAAY;EACZ,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,8CAA8C;AAChD;;AAEA;EACE,qGAAqG;AACvG;;AAEA;EACE,oGAAoG;AACtG;;AAEA;EACE,oGAAoG;AACtG;;AAEA;EACE,qGAAqG;AACvG",sourcesContent:['.game {\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.game .message {\n  align-self: stretch;\n  background-color: var(--tertiary-color);\n  border-bottom: var(--border);\n  box-shadow: 0 10px 10px -10px #3c3c3c;\n  padding: 1rem;\n  font-size: 1.5rem;\n  text-align: center;\n}\n\n.game button:not(.rotate):not(.square) {\n  margin-bottom: 1rem;\n}\n\n.game .start-game.start-game {\n  position: absolute;\n  top: 50vh;\n  font-size: 1.5rem;\n  padding: 1.5rem 3rem;\n}\n\n.game-areas {\n  padding: 1rem;\n  width: 100%;\n  display: grid;\n  grid-template: repeat(2, max-content) / repeat(2, 1fr);\n}\n\n.game-area {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n  background-color: transparent;\n  padding: 0;\n  display: flex;\n}\n\n.play .square, .square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.play .square .ship, .square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.square.hit {\n  color: var(--dark-tertiary-color);\n}\n\n.square.miss {\n  color: black;\n}\n\n.square.legal-border {\n  background-color: rgba(0, 128, 0, 0.5);\n}\n\n.square.error-border {\n  background-color: rgba(255, 0, 0, 0.5);\n}\n\n.play:not(.disabled) .square.clickable {\n  cursor: pointer;\n}\n\n.play:not(.disabled) .square.clickable:hover {\n  background-color: var(--light-secondary-color);\n}\n\n.marker {\n  width: 100%;\n  align-self: center;\n}\n\n.hit .marker {\n  font-weight: 900;\n  font-size: 170%;\n}\n\n.miss .marker {\n  font-size: 50%;\n}\n\n.ships {\n  margin-top: 1rem;\n  padding: 1rem;\n  min-width: 75%;\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 0.2rem;\n  display: grid;\n  grid-template-columns: repeat(3, max-content);\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n.ship {\n  position: relative;\n  grid-column-end: span 1;\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: var(--secondary-color);\n}\n\n.ship[data-orientation="0"] .ship-square.full {\n  grid-column: 1 / span 2;\n}\n\n.ship[data-orientation="1"] .ship-square.full {\n  grid-row: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, var(--secondary-color) 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.top-left {\n  grid-row: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, var(--secondary-color) 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.top-right {\n  grid-column: -2;\n  grid-row: 1;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, var(--secondary-color) 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-left {\n  grid-row: 2;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, var(--secondary-color) 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.ship[data-orientation="1"] .ship-square.bottom-right {\n  grid-column: -2;\n  grid-row: 2;\n}\n\n.invisible .ship-square {\n  background-image: none;\n  background-color: transparent;\n}\n\n*[draggable="true"] .ship-square {\n  cursor: pointer;\n}\n\n.dragging .ship-square {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n\n.ship button.rotate {\n  width: 100%;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  grid-row: 1;\n  grid-column: 3 / span 2;\n}\n\n.ship button.rotate img {\n  width: 100%;\n}\n\n.ship[data-orientation="1"] button.rotate {\n  grid-row: 3 / span 2;\n  grid-column: 1;\n}\n\n.invisible button.rotate {\n  visibility: hidden;\n}\n\n.disabled * {\n  border-color: lightgray;\n}\n\n.disabled .gameboard-label {\n  color: lightgray;\n}\n\n.set-up .remaining-ships, .disabled .ships, .play .ships, .play .ship button.rotate {\n  display: none;\n}\n\n.play:not(.disabled) .ship-square.full {\n  background-color: var(--light-secondary-color);\n}\n\n.play:not(.disabled) .ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, var(--light-secondary-color) 50%);\n}\n\n.play:not(.disabled) .ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, var(--light-secondary-color) 50%);\n}\n\n.play:not(.disabled) .ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, var(--light-secondary-color) 50%, transparent 50%);\n}\n\n.play:not(.disabled) .ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, var(--light-secondary-color) 50%, transparent 50%);\n}\n'],sourceRoot:""}]);const A=i},108:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".info {\n  width: max-content;\n  min-width: 40vw;\n  margin: 10vh auto 1rem;\n  padding: 1.5rem;\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.info .heading {\n  font-size: 2rem;\n  text-shadow: var(--heading-text-stroke);\n}\n","",{version:3,sources:["webpack://./src/styles/info.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,eAAe;EACf,sBAAsB;EACtB,eAAe;EACf,qBAAqB;EACrB,qBAAqB;EACrB,6BAA6B;EAC7B,6CAA6C;EAC7C,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,uCAAuC;AACzC",sourcesContent:[".info {\n  width: max-content;\n  min-width: 40vw;\n  margin: 10vh auto 1rem;\n  padding: 1.5rem;\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.info .heading {\n  font-size: 2rem;\n  text-shadow: var(--heading-text-stroke);\n}\n"],sourceRoot:""}]);const A=i},826:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".mode-selection {\n  margin-top: 5vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.mode-selection.mode-selection button {\n  background-color: var(--dark-secondary-color);\n  font-size: 1.5rem;\n  padding: 1rem 2rem;\n  min-width: 20rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mode-selection.mode-selection button:hover {\n  background-color: var(--secondary-color);\n}\n\n.mode-selection.mode-selection button img {\n  width: 8rem;\n}\n","",{version:3,sources:["webpack://./src/styles/mode-selection.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,6CAA6C;EAC7C,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,WAAW;AACb",sourcesContent:[".mode-selection {\n  margin-top: 5vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.mode-selection.mode-selection button {\n  background-color: var(--dark-secondary-color);\n  font-size: 1.5rem;\n  padding: 1rem 2rem;\n  min-width: 20rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.mode-selection.mode-selection button:hover {\n  background-color: var(--secondary-color);\n}\n\n.mode-selection.mode-selection button img {\n  width: 8rem;\n}\n"],sourceRoot:""}]);const A=i},20:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,".player-set-up {\n  margin-top: 10vh;\n  display: flex;\n  justify-content: center;\n}\n\n.player-set-up form {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  align-items: center;\n}\n","",{version:3,sources:["webpack://./src/styles/player-set-up.css"],names:[],mappings:"AAAA;EACE,gBAAgB;EAChB,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,qBAAqB;EACrB,qBAAqB;EACrB,6BAA6B;EAC7B,6CAA6C;EAC7C,mBAAmB;AACrB",sourcesContent:[".player-set-up {\n  margin-top: 10vh;\n  display: flex;\n  justify-content: center;\n}\n\n.player-set-up form {\n  padding: 1rem;\n  border-radius: 0.2rem;\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  background-color: var(--dark-secondary-color);\n  align-items: center;\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var u=r(l),E={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(E);else{var m=o(E,t);t.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var d=r(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0,(()=>{const n=document.querySelectorAll("main > section"),e=document.querySelector("section.mode-selection"),t=document.querySelectorAll(".mode-selection button"),o=document.querySelector("section.player-set-up"),a=document.querySelector("section.player-set-up form"),i=document.querySelector("section.info"),A=document.querySelectorAll(".info span.player-name"),s=document.querySelector(".info button.info-continue"),c=document.querySelector("section.game"),d=document.querySelector(".game .message"),l=document.querySelectorAll(".game .game-area"),u=document.querySelectorAll(".game .gameboard-label"),E=document.querySelectorAll(".game .gameboard"),m=()=>document.querySelectorAll(".game .gameboard .square"),p=(document.querySelectorAll(".game div.remaining-ships"),document.querySelectorAll(".game span.remaining-ships-counter")),g=document.querySelectorAll(".game .ships"),h=()=>document.querySelectorAll(".game .ship"),b=document.querySelector("button.update-gameboard-set-up"),f=document.querySelector("button.start-game"),C=document.querySelector("button.reset-game"),y=document.querySelector("section.pass-device"),B=document.querySelector(".pass-device span.pass-device-player"),v=document.querySelector(".pass-device button.pass-device-continue");function x(){n.forEach((n=>n.classList.add("hidden")))}function k(n,e){return`<div class="field">\n    <label for="player-${n}-name">Player${e?` ${n+1}`:""} Name</label>\n    <input type="text" name="player-${n}-name" id="player-${n}-name" required>\n    <div class="error hidden"></div>\n  </div>`}function w(){x(),c.classList.remove("hidden")}function q(n){d.textContent=n}function S(n,e){n.classList.contains("attacked")||(n.classList.add(e?"hit":"miss","attacked"),n.insertAdjacentHTML("beforeend",`<p class="marker">${e?"╳":"⬤"}</p>`))}function M(n,e=!1){l.forEach(((r,t)=>{const o=r.querySelectorAll(".ship");t!==n?(r.classList.add("disabled"),o.forEach((n=>{e?n.classList.add("hidden"):n.classList.remove("hidden")}))):(r.classList.remove("disabled"),o.forEach((n=>{e?n.classList.remove("hidden"):n.classList.add("hidden")})),r.querySelectorAll(".square").forEach((n=>{e?n.classList.remove("clickable"):n.classList.add("clickable")})))}))}function z(n,e){x(),y.classList.remove("hidden"),B.textContent=`${n||"the next player"}${void 0!==e?` (Player ${e+1})`:""}`}const L=[5,4,3,3,2],F=r.p+"5de6c26fb448acd377f0.svg",I=r.p+"ee8522f69a6e56523573.svg";function T(n){n.dataset.orientation=1-Number(n.dataset.orientation),n.style.gridTemplate=n.style.gridTemplate.split(" / ").reverse().join(" / ")}function $([n,e],r,t,o,a){const i=[[-1,0],[t,0]];for(let n=-1;n<=t;n+=1)i.push([n,-1],[n,1]);i.map((t=>{const[o,a]=r?t.reverse():t;return[n+o,e+a]})).filter((n=>n.every((n=>n>=0&&n<10)))).forEach((([n,e])=>{const r=10*n+e;E[o].querySelector(`.square[data-index="${r}"]`).classList.add((a?"legal":"error")+"-border")}))}function P(){m().forEach((n=>{n.classList.remove("legal-border","error-border")}))}function R(n){n.classList.remove("legal-drag","error-drag")}function j(n){u.forEach(((e,r)=>{e.textContent=`${n[r]}’s Shipyard`})),p.forEach((n=>{n.textContent=L.length}));const e=Math.min(window.innerHeight,window.innerWidth)/18;!function(n,e){E.forEach((e=>{e.style.display="grid",e.style.gridTemplate=`repeat(10, ${n}px) / repeat(10, ${n}px)`,e.textContent="";for(let n=0;n<100;n+=1)e.insertAdjacentHTML("beforeend",`<button class="square" data-index="${n}"></button>`)}))}(e),function(n){g.forEach(((e,r)=>{e.textContent="",L.forEach(((t,o)=>{e.insertAdjacentHTML("beforeend",function(n,e,r,t){let o=`<div style="display: grid; grid-template: repeat(${e}, ${n}px) / repeat(4, ${n/2}px);" class="ship" data-game-area-index="${t}" data-index="${r}" data-square-length="${n}" data-orientation="0" draggable="true">`;for(let n=0;n<e;n+=1)0===n?(o+='<div class="ship-square top-left"></div>',o+='<div class="ship-square top-right"></div>'):n===e-1?(o+='<div class="ship-square bottom-left"></div>',o+='<div class="ship-square bottom-right"></div>'):o+='<div class="ship-square full"></div>';return o+=`<button class="rotate"><img src=${F} alt="rotate"></button></div>`,o}(n,t,o,r))}))}))}(e)}function Z(){b.classList.add("hidden")}function G(n){return n[0].toUpperCase()+n.slice(1)}function N(n,e){return e.some((e=>e.every(((e,r)=>e===n[r]))))}function W(n){return{length:n}}function O(n,e){let r=e;return{hit:function(){r+=1},isSunk:function(){return n===r}}}function U(n,e,r=1/0){function t(n=this.position){const r=[];if(!n||void 0===this.orientation)return r;const t=this.orientation;for(let o=0;o<this[e].length;o+=1){const e=[...n];e[t]+=o,r.push(e)}return r}function o(e,r){return n[e].area(r).every((r=>!N(r,function({excluding:e}={}){return n.reduce(((n,r,t)=>{if(!r.position||e.includes(t))return n;const o=r.area();return[...n,...o,...(a=o,a.reduce(((n,[e,r])=>[...n,...[[1,0],[-1,0],[0,1],[0,-1],[1,1],[1,-1],[-1,1],[-1,-1]].map((([n,t])=>[e+n,r+t])).filter((n=>!N(n,a)))]),[]))];var a}),[])}({excluding:[e]}))))}function a(t,a){const i=n[t],A=function(n,t){const o=[r-t[e].length,r-1],a=0===t.orientation?o:[...o].reverse();return n.map(((n,e)=>Math.max(0,Math.min(a[e],n))))}(a,i);if(!o(t,A))throw new Error("This position is illegal!");return i.position=A,i.position}function i(e){const r=n[e];if(r.orientation=1-r.orientation,r.position)try{a(e,r.position)}catch(n){throw i(e),n}return r.orientation}n.forEach((n=>Object.assign(n,{orientation:0,area:t})));const A=G(e);return{[`place${A}`]:a,[`unplace${A}`]:function(e){n[e].position=null},[`legal${A}Placement`]:o,[`all${A}sPlaced`]:function(){return n.every((n=>n.position))},[`rotate${A}`]:i,[`autoPlace${A}s`]:function(){n.forEach(((n,e)=>{for(Math.floor(2*Math.random())&&i(e);!n.position;)try{a(e,[...new Array(2)].map((()=>Math.floor(Math.random()*r))))}catch{}}))}}}function D(n,e,r,{moveable:t=!1,allMethodNames:o=[],countMethodNames:a=[]}={}){const i=n.map((n=>({[e]:r(n)}))),A=o.reduce(((n,r)=>{const t=G(r);return{...n,[`all${t}`]:function(){return i.every((n=>n[e][`is${t}`]()))}}}),{}),s=a.reduce(((n,r)=>{const t=G(r),o=G(e);function a(n){return i.filter((r=>r[e][`is${t}`]()===n)).length}return{...n,[`${r}${o}s`]:function(){return a(!0)},[`not${t}${o}s`]:function(){return a(!1)}}}),{});return{[`${e}s`]:i,...A,...s,...t?U(i,e,t.areaLength||1/0):{}}}function X(n){return{name:n,setName:function(n){this.name=n}}}function H(n,{attackItemName:e}={}){return{attacks:n,receiveAttack:function(r){let t=!0;return e&&(t=function(n,r){for(let t=0;t<n.length;t+=1){const o=n[t];if(N(r,o.area()))return o[e].hit(),!0}return!1}(this[`${e}s`],r)),n.push({position:r,hit:t}),t}}}function Y({auto:n=!1}={}){function e(n,e){return N(e,(n.attacks||[]).map((n=>n.position)))}return{attack:function(n,r){if(e(n,r))throw new Error("That position has already been attacked!");return n.receiveAttack(r)},...n?function(){function n(n){return[...new Array(2)].map((()=>Math.floor(Math.random()*n.length)))}function r(n,e){return e&&e.every((e=>e>=0&&e<n.length))}const t=[],o=[];return{autoAttack:function(a){let i;for(;!r(a,i)||N(i,t)||e(a,i);)i=o.pop()||n(a);const A=this.attack(a,i);return A&&function(n){!function([n,e]){[[-1,-1],[-1,1],[1,-1],[1,1]].forEach((([r,o])=>{t.push([n+r,e+o])}))}(n),function([n,e]){const r=[[-1,0],[1,0],[0,-1],[0,1]];for(;r.length;){const t=Math.floor(Math.random()*r.length),[a,i]=r.splice(t,1)[0];o.push([n+a,e+i])}}(n)}(i),A}}}():{}}}function V({method:n=null}={}){return{takeTurn:function(e){return!!n&&(this[n](e),!0)}}}function _({length:n=2,hits:e=0}={}){return{type:"Ship",...W(n),...O(n,e)}}function J(n="Player"){return{type:"humanPlayer",...X(n),...Y(),...V()}}const K={modes:{playerMode:0},players:[],gameboards:[],currPlayerIndex:0,gameOver:!1};function Q({playerMode:n=0,gameboardLength:e=10,shipLengths:r=[5,4,3,3,2]}={}){!function(n){const e={...n};Object.keys(e).forEach((n=>{e[n]=Number(e[n])})),K.modes=e}({playerMode:n}),function(){if(1===K.modes.playerMode)K.players=[...new Array(2)].map((()=>J()));else{K.players=[];const n=Math.floor(2*Math.random());K.players[n]=J(),K.players[1-n]={type:"computerPlayer",...X("Computer"),...Y({auto:!0}),...V({method:"autoAttack"})}}}(),function(n,e){K.gameboards=[...new Array(2)].map((()=>function({shipLengths:n=[5,4,3,3,2],length:e=10,attacks:r=[]}={}){return{type:"Gameboard",...W(e),...D(n.map((n=>W(n))),"ship",_,{moveable:{areaLength:e},allMethodNames:["sunk"],countMethodNames:["sunk"]}),...H(r,{attackItemName:"ship"})}}({length:n,shipLengths:e}))),K.gameboards[nn()]?.autoPlaceShips()}(e,r),K.currPlayerIndex=0,K.gameOver=!1}function nn(){return K.players.findIndex((n=>"computerPlayer"===n.type))}function en(){return K.gameboards[1-K.currPlayerIndex]}function rn(){return K.players[K.currPlayerIndex]}function tn(){const{attacks:n}=en();return n?.[n.length-1]&&!n[n.length-1].hit}function on(n=!1){let e=n;for(;!K.gameOver&&(e||=rn().takeTurn(en()),e);)K.gameOver=K.gameboards.some((n=>n.allSunk())),tn()&&(K.currPlayerIndex=1-K.currPlayerIndex),e=!1}const an=[];function An(n,e){return an.find((({position:r,gameAreaIndex:t})=>{return n===t&&(o=r,e.every(((n,e)=>o[e]===n)));var o})).square}let sn=-1;function cn(){Z();const n=K.gameboards.findIndex((n=>!n.allShipsPlaced()));if(n<0)return l.forEach((n=>n.classList.add("hidden-visibility"))),q("Click the Start Game button to begin the game!"),void f.classList.remove("hidden");const e=K.players[n].name;M(n,!0),q(`${e} (Player ${n+1}), place your ships. Drag and drop them!`),sn>=0&&n!==sn&&z(e,n),sn=n}function dn(){C.classList.add("hidden"),x(),e.classList.remove("hidden")}function ln(n){Q({playerMode:Number(n.target.closest("button").dataset.mode),gameboardLength:10,shipLengths:L}),function(n){x(),o.classList.remove("hidden"),a.querySelectorAll(".field").forEach((n=>n.remove()));for(let e=n;e>=0;e-=1)a.insertAdjacentHTML("afterBegin",k(e,n))}(K.modes.playerMode)}function un(n=0){const e=1-nn();setTimeout((()=>{const r=K.gameboards[e].attacks;for(let t=n;t<r.length;t+=1){const n=r[t],o=An(e,n.position);if(!o.classList.contains("attacked")){S(o,n.hit),t+=1,t===r.length?mn(!1):un(t);break}}}),1e3)}function En(n=!0){K.gameOver&&("computerPlayer"!==rn().type||!n)&&(q(`Game over! ${rn().name} (Player ${K.currPlayerIndex+1}) wins.`),l.forEach((n=>n.classList.add("disabled"))),C.classList.remove("hidden"))}function mn(n=!0){const e=tn()&&n&&K.players[nn()]||rn(),r=K.players.indexOf(e),t="computerPlayer"===e.type;q(`${e.name} (Player ${r+1})’s turn...`),M(1-r,t),en().attacks.forEach((n=>{S(An(1-K.currPlayerIndex,n.position),n.hit)})),t&&un(),K.gameboards.forEach(((n,e)=>{return r=e,t=n.notSunkShips(),void(p[r].textContent=t);var r,t})),En(n)}b.addEventListener("click",cn),window.addEventListener("load",dn),C.addEventListener("click",dn),t.forEach((n=>n.addEventListener("click",ln))),a.addEventListener("submit",(function(n){if(n.preventDefault(),(e=a).querySelectorAll(".error").forEach((n=>n.classList.add("hidden"))),e.querySelectorAll("input").forEach((n=>{if(!n.checkValidity()){const r=e.querySelector(`#${n.id}+.error`);r.classList.remove("hidden"),r.textContent=n.validationMessage}})),!e.checkValidity())return;var e;const r=[...n.target.querySelectorAll("input")].map((n=>n.value));let t=0;var o;K.players.forEach((n=>{"humanPlayer"===n.type&&(n.setName(r[t]),t+=1)})),o=K.players.map((n=>n.name)),x(),i.classList.remove("hidden"),A.forEach(((n,e)=>{n.textContent=o[e]}))})),s.addEventListener("click",(function(){w(),l.forEach((n=>n.classList.add("set-up"))),l.forEach((n=>n.classList.remove("play"))),j(K.players.map((n=>n.name))),[...m()].forEach(((n,e)=>{an[e]={square:n,position:[Math.floor(n.dataset.index/10),n.dataset.index%10],gameAreaIndex:Number(n.closest(".game-area").dataset.index)}})),function(){function n(n,e=K.gameboards[sn].ships[Number(n.dataset.index)].position){n.classList.add("on-gameboard"),An(sn,e).appendChild(n)}function e(e){const r=e.target.closest(".ship"),[t,o]=["gameAreaIndex","index"].map((n=>Number(r.dataset[n]))),a=K.gameboards[t].ships[o].position;try{K.gameboards[t].rotateShip(o)}catch{return void function(n,e){T(n),$(e,Number(n.dataset.orientation),L[Number(n.dataset.index)],Number(n.dataset.gameAreaIndex),!1),setTimeout((()=>{T(n),P()}),500)}(r,a)}a&&n(r),T(r)}!function(){let e;g.forEach(((n,r)=>{n.addEventListener("dragover",(function(e){e.preventDefault(),e.dataTransfer.dropEffect="move",n.classList.add("legal-drag")})),n.addEventListener("dragleave",(()=>R(n))),n.addEventListener("drop",(function(){sn===r&&(K.gameboards[r].unplaceShip(Number(e.dataset.index)),e.classList.remove("on-gameboard"),n.appendChild(e),Z())}))})),an.forEach((({square:r,position:t,gameAreaIndex:o})=>{r.addEventListener("dragover",(function(n){if(n.preventDefault(),n.dataTransfer.dropEffect="move",sn!==o)return;const r=Number(e.dataset.index),a=Number(e.dataset.orientation),i=K.gameboards[o].legalShipPlacement(r,t);$(t,a,L[r],o,i)})),r.addEventListener("dragleave",P),r.addEventListener("drop",(function(){if(sn!==o)return;const r=Number(e.dataset.index);try{K.gameboards[o].placeShip(r,t)}catch{return}n(e),K.gameboards[o].allShipsPlaced()&&b.classList.remove("hidden")}))}));const r=h();r.forEach((n=>{n.addEventListener("drag",(function(){document.body.classList.add("dragging"),n.classList.add("invisible"),r.forEach((n=>{n.closest(".square")?.classList?.add("with-background-ship")}))})),n.addEventListener("dragstart",(function(r){document.body.classList.add("dragging"),e=n;const t=Number(n.dataset.squareLength)/2;r.dataTransfer.setDragImage(n,t,t)})),n.addEventListener("dragend",(function(){document.body.classList.remove("dragging"),n.classList.remove("invisible"),g.forEach((n=>R(n))),P(),r.forEach((n=>{n.closest(".square")?.classList?.remove("with-background-ship")}))}))}))}(),document.querySelectorAll(".ship button.rotate").forEach((n=>{n.addEventListener("click",e),n.addEventListener("mouseover",(()=>function(n){n.querySelector("img").src=I}(n))),n.addEventListener("mouseout",(()=>function(n){n.querySelector("img").src=F}(n)))}))}(),cn()})),v.addEventListener("click",w),f.addEventListener("click",(function(){h().forEach((n=>{n.draggable=!1})),f.classList.add("hidden"),l.forEach((n=>n.classList.remove("hidden-visibility"))),l.forEach((n=>n.classList.remove("set-up"))),l.forEach((n=>n.classList.add("play"))),an.forEach((({square:n,position:e,gameAreaIndex:r})=>{n.addEventListener("click",(function(){if(!l[r].classList.contains("disabled")&&(n=r,!K.gameOver&&n===1-K.currPlayerIndex)){var n;try{rn().attack(en(),e)}catch{return}mn(),1===K.modes.playerMode&&tn()&&setTimeout((()=>{z(rn().name,K.currPlayerIndex),mn()}),1e3),on(!0),En()}}))})),1===K.modes.playerMode&&z(K.players[0].name,0),mn(),on()}));var pn=r(379),gn=r.n(pn),hn=r(795),bn=r.n(hn),fn=r(569),Cn=r.n(fn),yn=r(565),Bn=r.n(yn),vn=r(216),xn=r.n(vn),kn=r(589),wn=r.n(kn),qn=r(735),Sn={};Sn.styleTagTransform=wn(),Sn.setAttributes=Bn(),Sn.insert=Cn().bind(null,"head"),Sn.domAPI=bn(),Sn.insertStyleElement=xn(),gn()(qn.Z,Sn),qn.Z&&qn.Z.locals&&qn.Z.locals;var Mn=r(689),zn={};zn.styleTagTransform=wn(),zn.setAttributes=Bn(),zn.insert=Cn().bind(null,"head"),zn.domAPI=bn(),zn.insertStyleElement=xn(),gn()(Mn.Z,zn),Mn.Z&&Mn.Z.locals&&Mn.Z.locals;var Ln=r(826),Fn={};Fn.styleTagTransform=wn(),Fn.setAttributes=Bn(),Fn.insert=Cn().bind(null,"head"),Fn.domAPI=bn(),Fn.insertStyleElement=xn(),gn()(Ln.Z,Fn),Ln.Z&&Ln.Z.locals&&Ln.Z.locals;var In=r(20),Tn={};Tn.styleTagTransform=wn(),Tn.setAttributes=Bn(),Tn.insert=Cn().bind(null,"head"),Tn.domAPI=bn(),Tn.insertStyleElement=xn(),gn()(In.Z,Tn),In.Z&&In.Z.locals&&In.Z.locals;var $n=r(108),Pn={};Pn.styleTagTransform=wn(),Pn.setAttributes=Bn(),Pn.insert=Cn().bind(null,"head"),Pn.domAPI=bn(),Pn.insertStyleElement=xn(),gn()($n.Z,Pn),$n.Z&&$n.Z.locals&&$n.Z.locals;var Rn=r(535),jn={};jn.styleTagTransform=wn(),jn.setAttributes=Bn(),jn.insert=Cn().bind(null,"head"),jn.domAPI=bn(),jn.insertStyleElement=xn(),gn()(Rn.Z,jn),Rn.Z&&Rn.Z.locals&&Rn.Z.locals,r.p,r.p,r.p})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,