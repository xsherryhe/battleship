(()=>{"use strict";var e={689:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.game-areas {\n  display: flex;\n  gap: 2rem;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.ships {\n  display: flex;\n  gap: 1rem;\n}\n\n.ship {\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n  grid-column: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.disabled * {\n  color: gray;\n  border-color: lightgray;\n}\n","",{version:3,sources:["webpack://./src/styles/all.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,0BAA0B;EAC1B,uBAAuB;AACzB;;AAEA;EACE,2BAA2B;EAC3B,kBAAkB;AACpB;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;AACzB;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,6EAA6E;EAC7E,cAAc;AAChB;;AAEA;EACE,8EAA8E;EAC9E,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,uBAAuB;AACzB",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\n.hidden {\n  display: none !important;\n}\n\n.game-areas {\n  display: flex;\n  gap: 2rem;\n}\n\n.gameboard {\n  display: grid;\n  width: max-content;\n  border: 0.1rem solid black;\n  background-color: white;\n}\n\n.square {\n  border: 0.05rem solid black;\n  position: relative;\n}\n\n.square.with-background-ship {\n  transform-style: preserve-3d;\n}\n\n.square.with-background-ship .ship {\n  transform: translateZ(-1px);\n}\n\n.ships {\n  display: flex;\n  gap: 1rem;\n}\n\n.ship {\n  display: grid;\n  z-index: 1;\n}\n\n.ship.on-gameboard {\n  position: absolute;\n}\n\n.ship-square.full {\n  background-color: black;\n  grid-column: 1 / span 2;\n}\n\n.ship-square.top-left {\n  background-image: linear-gradient(to bottom right, transparent 50%, black 50%);\n  grid-column: 1;\n}\n\n.ship-square.top-right {\n  background-image: linear-gradient(to bottom left, transparent 50%, black 50%);\n  grid-column: 2;\n}\n\n.ship-square.bottom-left {\n  background-image: linear-gradient(to bottom left, black 50%, transparent 50%);\n  grid-column: 1;\n}\n\n.ship-square.bottom-right {\n  background-image: linear-gradient(to bottom right, black 50%, transparent 50%);\n  grid-column: 2;\n}\n\n.disabled * {\n  color: gray;\n  border-color: lightgray;\n}\n"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=t(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var f=a(m,r);r.byIndex=s,n.splice(s,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=t(o[i]);n[s].references--}for(var c=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=document.querySelectorAll("main > section"),n=document.querySelector("section.mode-selection"),r=document.querySelectorAll(".mode-selection button"),a=document.querySelector("section.player-set-up"),o=document.querySelector("section.player-set-up form"),i=document.querySelector("section.game"),s=document.querySelector(".game .message"),c=document.querySelectorAll(".game .game-area"),d=document.querySelectorAll(".game .gameboard-label"),l=document.querySelectorAll(".game .gameboard"),u=()=>document.querySelectorAll(".game .gameboard .square"),p=document.querySelectorAll(".game .ships"),m=[5,4,3,3,2];function f(){e.forEach((e=>e.classList.add("hidden")))}function A(e,n){return`<div class="field">\n    <label for="player-${e}-name">Player${n?` ${e+1}`:""} Name</label>\n    <input type="text" name="player-${e}-name" id="player-${e}-name">\n  </div>`}function h(){u().forEach((e=>{e.style.backgroundColor="transparent"}))}function g(e){return e[0].toUpperCase()+e.slice(1)}function b(e,n){return n.some((n=>n.every(((n,t)=>n===e[t]))))}function y(e){return{length:e}}function v(e,n){let t=n;return{hit:function(){t+=1},isSunk:function(){return e===t}}}function E(e,n,t=1/0){function r(e=this.position){const t=[];if(void 0===e||void 0===this.orientation)return t;const r=this.orientation;for(let a=0;a<this[n].length;a+=1){const n=[...e];n[r]+=a,t.push(n)}return t}function a(n,t){return e[n].area(t).every((t=>!b(t,function({excluding:n}={}){return e.reduce(((e,t,r)=>{if(!t.position||n.includes(r))return e;const a=t.area();return[...e,...a,...(o=a,o.reduce(((e,[n,t])=>[...e,...[[1,0],[-1,0],[0,1],[0,-1],[1,1],[1,-1],[-1,1],[-1,1]].map((([e,r])=>[n+e,t+r])).filter((e=>!b(e,o)))]),[]))];var o}),[])}({excluding:[n]}))))}function o(r,o){const i=e[r],s=function(e,r){const a=[t-r[n].length,t-1],o=0===r.orientation?a:[...a].reverse();return e.map(((e,n)=>Math.max(0,Math.min(o[n],e))))}(o,i);if(!a(r,s))throw new Error("This position is illegal!");i.position=s}function i(n){const t=e[n];t.orientation=1-t.orientation}e.forEach((e=>Object.assign(e,{orientation:0,area:r})));const s=g(n);return{[`place${s}`]:o,[`legal${s}Placement`]:a,[`all${s}sPlaced`]:function(){return e.every((e=>e.position))},[`rotate${s}`]:i,[`autoPlace${s}s`]:function(){e.forEach(((e,n)=>{for(Math.floor(2*Math.random())&&i(n);!e.position;)try{o(n,[...new Array(2)].map((()=>Math.floor(Math.random()*t))))}catch{}}))}}}function C(e,n,t,{moveable:r=!1,allMethodNames:a=[]}={}){const o=e.map((e=>({[n]:t(e)}))),i=a.reduce(((e,t)=>{const r=g(t);return{...e,[`all${r}`]:function(){return o.every((e=>e[n][`is${r}`]()))}}}),{});return{[`${n}s`]:o,...i,...r?E(o,n,r.areaLength||1/0):{}}}function k(e){return{name:e,setName:function(e){this.name=e}}}function x(e,{attackItemName:n}={}){return{attacks:e,receiveAttack:function(t){e.push(t),n&&function(e,t){e.forEach((e=>{b(t,e.area())&&e[n].hit()}))}(this[`${n}s`],t)}}}function q(){function e(e){return[...new Array(2)].map((()=>Math.floor(Math.random()*e.length)))}return{autoAttack:function(n){let t=e(n);for(;b(t,n.attacks||[]);)t=e(n);this.attack(n,t)}}}function B({auto:e=!1}={}){return{attack:function(e,n){if(b(n,e.attacks||[]))throw new Error("That position has already been attacked!");e.receiveAttack(n)},...e?q():{}}}function L({method:e=""}={}){return{takeTurn:function(n){return!!e&&(this[e](n),!0)}}}function S({length:e=2,hits:n=0}={}){return{type:"Ship",...y(e),...v(e,n)}}function w(e="Player"){return{type:"humanPlayer",...k(e),...B(),...L()}}const M={modes:{playerMode:0},players:[],gameboards:[],currPlayerIndex:0,gameOver:!1};function $({playerMode:e=0,gameboardLength:n=10,shipLengths:t=[5,4,3,3,2]}={}){!function(e){const n={...e};Object.keys(n).forEach((e=>{n[e]=Number(n[e])})),M.modes=n}({playerMode:e}),function(){if(M.modes.playerMode)M.players=[...new Array(2)].map((()=>w()));else{M.players=[];const e=Math.floor(2*Math.random());M.players[e]=w(),M.players[1-e]={type:"computerPlayer",...k("Computer"),...B({auto:!0}),...L({method:"autoAttack"})}}}(),function(e,n){if(M.gameboards=[...new Array(2)].map((()=>function({shipLengths:e=[5,4,3,3,2],length:n=10,attacks:t=[]}={}){return{type:"Gameboard",...y(n),...C(e.map((e=>y(e))),"ship",S,{moveable:{areaLength:n},allMethodNames:["sunk"]}),...x(t,{attackItemName:"ship"})}}({length:e,shipLengths:n}))),M.modes.playerMode)return;const t=M.players.findIndex((e=>"computerPlayer"===e.type));M.gameboards[t].autoPlaceShips()}(n,t),M.currPlayerIndex=0,M.gameOver=!1}let N;function I(e){$({playerMode:Number(e.target.closest("button").dataset.mode),gameboardLength:10,shipLengths:m}),function(e){f(),a.classList.remove("hidden");for(let n=e;n>=0;n-=1)o.insertAdjacentHTML("afterBegin",A(n,e))}(M.modes.playerMode)}window.addEventListener("load",(function(){f(),n.classList.remove("hidden")})),r.forEach((e=>e.addEventListener("click",I))),o.addEventListener("submit",(function(e){e.preventDefault();const n=[...e.target.querySelectorAll("input")].map((e=>e.value));let t=0;M.players.forEach((e=>{"humanPlayer"===e.type&&(e.setName(n[t]),t+=1)})),f(),i.classList.remove("hidden"),function(e){d.forEach(((n,t)=>{n.textContent=`${e[t]}'s Shipyard`}));const n=Math.min(window.innerHeight,window.innerWidth)/22.5;!function(e,n){l.forEach((n=>{n.style.display="grid",n.style.gridTemplate=`repeat(10, ${e}px) / repeat(10, ${e}px)`;for(let e=0;e<100;e+=1)n.insertAdjacentHTML("beforeend",`<div class="square" data-index="${e}"></div>`)}))}(n),function(e){p.forEach(((n,t)=>{m.forEach(((r,a)=>{n.insertAdjacentHTML("beforeend",function(e,n,t,r){let a=`<div style="display: grid; grid-template: repeat(${n}, ${e}px) / repeat(2, ${e/2}px);" class="ship" data-game-area-index="${r}" data-index="${t}" data-square-center="${e/2}" draggable="true">`;for(let e=0;e<n;e+=1)0===e?(a+='<div class="ship-square top-left"></div>',a+='<div class="ship-square top-right"></div>'):e===n-1?(a+='<div class="ship-square bottom-left"></div>',a+='<div class="ship-square bottom-right"></div>'):a+='<div class="ship-square full"></div>';return a+="</div>",a}(e,r,a,t))}))}))}(n)}(M.players.map((e=>e.name))),function(){const e=[...u()].map((e=>({square:e,position:[Math.floor(e.dataset.index/10),e.dataset.index%10],gameAreaIndex:Number(e.closest(".game-area").dataset.index)}))),n=document.querySelectorAll(".game .ship");e.forEach((({square:n,position:t,gameAreaIndex:r})=>{n.addEventListener("dragover",(function(e){if(e.preventDefault(),e.dataTransfer.dropEffect="move",Number(N.dataset.gameAreaIndex)!==r)return;const n=Number(N.dataset.index),a=M.gameboards[r].legalShipPlacement(n,t);!function([e,n],t,r,a){const o=[[-1,0],[t,0]];for(let e=-1;e<=t;e+=1)o.push([e,-1],[e,1]);o.map((([t,r])=>[e+t,n+r])).filter((e=>e.every((e=>e>=0&&e<10)))).forEach((([e,n])=>{const t=10*e+n;l[r].querySelector(`.square[data-index="${t}"]`).style.backgroundColor=a?"green":"red"}))}(t,m[n],r,a)})),n.addEventListener("dragleave",h),n.addEventListener("drop",(function(){if(Number(N.dataset.gameAreaIndex)!==r)return;const n=Number(N.dataset.index);try{M.gameboards[r].placeShip(n,t)}catch{return}var a;a=M.gameboards[r].ships[n].position,N.classList.add("on-gameboard"),e.find((({position:e,gameAreaIndex:n})=>{return r===n&&(t=e,a.every(((e,n)=>t[n]===e)));var t})).square.appendChild(N)}))})),n.forEach((e=>{e.addEventListener("drag",(function(){e.classList.add("hidden")})),e.addEventListener("dragstart",(function(t){N=e;const r=Number(e.dataset.squareCenter);t.dataTransfer.setDragImage(e,r,r),n.forEach((n=>{n!==e&&n.classList.contains("on-gameboard")&&n.closest(".square").classList.add("with-background-ship")}))})),e.addEventListener("dragend",(function(){e.classList.remove("hidden"),h(),n.forEach((e=>{e.closest(".square")?.classList?.remove("with-background-ship")}))}))}))}(),function(){const e=M.gameboards.findIndex((e=>!e.allShipsPlaced()));var n,t;t=e,c.forEach(((e,n)=>{const r=e.querySelectorAll(".ship");n!==t?(e.classList.add("disabled"),r.forEach((e=>e.classList.add("hidden")))):(e.classList.remove("disabled"),r.forEach((e=>e.classList.remove("hidden"))))})),n=M.players[e].name,s.textContent=`${n}, place your ships.`}()}));var P=t(379),T=t.n(P),j=t(795),O=t.n(j),U=t(569),Z=t.n(U),z=t(565),R=t.n(z),H=t(216),D=t.n(H),W=t(589),X=t.n(W),F=t(689),J={};J.styleTagTransform=X(),J.setAttributes=R(),J.insert=Z().bind(null,"head"),J.domAPI=O(),J.insertStyleElement=D(),T()(F.Z,J),F.Z&&F.Z.locals&&F.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,